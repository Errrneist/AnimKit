//************************************************************
//load weight map for blendShape (through artisan)
//-based on useful.mel by Davide Lasala, Wayde Duncan-Smith
//NOTE: THIS USUALLY NEEDS TO BE EVALDEFERRED IN ORDER TO WORK DUE TO ARTISAN REFRESH ISSUES
//NOTE: only works for single blendShape node or last one in stack if using multiples
// IN:	$geo		geo that has the deformer
//	$bsNode		blendShape node
//	$index		index of blendShape, 1-based
//	$map		map to use
//************************************************************

global proc mzLoadBlendShapeMap(string $geo, string $bsNode, string $shape, string $map)
{
	print ("Loading map for blendShape target '"+$shape+"': "+$map+"\n");	
	if(`window -exists toolProperties`)
		deleteUI  toolProperties;
	eval("toolPropertyWindow");
	eval("toolPropertyShow");
	eval("setToolTo selectSuperContext");
	eval("ArtPaintAttrTool");
	eval("artAttrPaintOperation artAttrCtx Replace");
	select -r $geo;
	eval("source \"AEblendShapeAttrNew.mel\"");
	eval("artSetToolAndSelectAttr  artAttrCtx  \"blendShape."+$bsNode+".targetWeights\"");
	eval("toolPropertyShow");
	artAttrInitPaintableAttr;
		
	eval("artAttrPaintOperation artAttrCtx Replace");
	eval("artAttrCtx -e -value 1 "+`currentCtx`);
	eval("artAttrCtx -e -op 1 "+`currentCtx`);
		
	eval("refresh");eval("dgdirty -a");
	eval("toolPropertyWindow");
	eval("toolPropertyShow");	
	//evalDeferred("textScrollList -e -sii "+$index+" blendShapeTargetList; artBlendShapeSelectTarget artAttrCtx \"\";artBlendShapeTargetIndex") ;
	evalDeferred("textScrollList -e -si "+$shape+" blendShapeTargetList; artBlendShapeSelectTarget artAttrCtx \"\";artBlendShapeTargetIndex") ;
	evalDeferred("artAttrCtx -e -importfileload \""+$map+"\" \"artAttrBlendShapeContext\"");
	eval("artSetToolAndSelectAttr  artAttrCtx  \"\"");
	eval("refresh") ; eval("dgdirty -a");
	
	
}