global proc shelf_CharacterDesign () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Saves an iteration of this file." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Save Iteration" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "production_save_iteration.png" 
        -image1 "production_save_iteration.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import saveIteration\n\nsaveIteration.save_iteration_cmd()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Creates an image reference \"rig\" that is resizeable." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Reference Setup" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_reference_setup.png" 
        -image1 "chardesign_reference_setup.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import referenceSetup\n\nreferenceSetup.reference_planes_gui_cmd()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Turns location rotation axis ON for all joints in the scene." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Turn Joint Axes On" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_joint_axis_on.png" 
        -image1 "chardesign_joint_axis_on.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from pymel.core import *\n\nmap(lambda j: j.displayLocalAxis.set(1), ls(type=\"joint\"))" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Turns location rotation axis OFF for all joints in the scene." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Turn Joint Axes Off" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_joint_axis_off.png" 
        -image1 "chardesign_joint_axis_off.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from pymel.core import *\n\nmap(lambda j: j.displayLocalAxis.set(0), ls(type=\"joint\"))" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Selects the joint descendants (skipping other objects) of a selected root joint.  If no root joint is selected all joints in the scene are selected." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Select Skeleton" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_select_joints.png" 
        -image1 "chardesign_select_joints.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "# Select all joint descendents\nfrom pymel.core import *\nif len(selected()) > 0:\n\t''' Select joint hierarchy. '''\n\tmap(lambda j: select( j.listRelatives(ad=True, type='joint'), add=True ), ls(sl=True))\nelse:\n\t''' Select all joints. '''\n\tselect( ls(type=\"joint\", r=1) )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select one or more polygonal options and click this button to make an opacity slider for their shaders." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create Visibility Slider" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_visibility_slider.png" 
        -image1 "chardesign_visibility_slider.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import referenceSetup\n\nreferenceSetup.transparency_fader_cmd()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create block models on the selected joints." 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Create Block Model" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "chardesign_blockmodel.png" 
        -image1 "chardesign_blockmodel.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import blockModel\nreload(blockModel)\n\nblockModel.create_block_model_cmd()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
